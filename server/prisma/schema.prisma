generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//? TABLE "Utilisateur"
model User {
  id             Int       @id @default(autoincrement())
  name           String    @db.VarChar(255)
  email          String    @unique @db.VarChar(255)
  hashedPassword String    @db.VarChar(255)
  role           String    @default("user") @db.VarChar(255)
  //! Foreign Key
  //* One To One
  User_Picture   Picture?  @relation(fields: [picture_id], references: [id])
  picture_id     Int?
  //* Many To Many
  Comments       Comment[]
  Projects       Project[]
  Tickets        Ticket[]
}

//? TABLE "Projet"
model Project {
  id              Int       @id @default(autoincrement())
  title           String    @db.VarChar(255)
  description     String?   @db.VarChar(255)
  start_time      DateTime
  end_time        DateTime?
  status          String?   @db.VarChar(255)
  //! Foreign Key
  //* One To One
  Project_Picture Picture?  @relation(fields: [picture_id], references: [id])
  picture_id      Int?
  //* One To Many
  Tickets         Ticket[]
  //* Many To Many
  Users           User[]
}

//? TABLE "Ticket"
model Ticket {
  id             Int       @id @default(autoincrement())
  title          String    @db.VarChar(255)
  description    String?   @db.VarChar(255)
  estimated_time Int?
  spent_time     Int?
  status         String?   @db.VarChar(255)
  labels         String?   @db.VarChar(255)
  priority       String?   @db.VarChar(255)
  difficulty     String?   @db.VarChar(255)
  //! Foreign Key
  //* Many To One
  Project        Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId      Int?
  //* Many To Many
  Comments       Comment[]
  Users          User[]

}

//? TABLE "Image"
model Picture {
  id      Int       @id @default(autoincrement())
  url     String    @db.VarChar(255)
  //! Foreign Key
  //* One To One
  Project Project[]
  User    User[]
}

//? TABLE "Commentaire"
model Comment {
  id           Int       @id @default(autoincrement())
  content      String    @db.VarChar(255)
  published_at DateTime
  modified_at  DateTime?
  //! Foreign Key
  //* Many To Many
  Users        User[]
  Tickets      Ticket[]
}

//! npx prisma migrate dev
//! npx prisma migrate reset
